{
  "swagger" : "2.0",
  "info" : {
    "description" : "Fb2 books store \n",
    "version" : "1.0.0",
    "title" : "Fb2 books store",
    "contact" : {
      "email" : "DFilushin@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "info",
    "description" : "Library meta information"
  }, {
    "name" : "genres",
    "description" : "Access of genres"
  }, {
    "name" : "authors",
    "description" : "Access to authors"
  }, {
    "name" : "books",
    "description" : "Access to books"
  }, {
    "name" : "languages",
    "description" : "Used languages"
  } ],
  "paths" : {
    "/api/v1/info" : {
      "get" : {
        "tags" : [ "info" ],
        "summary" : "Get library meta information",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Info"
            }
          }
        }
      }
    },
    "/api/v1/genres" : {
      "get" : {
        "tags" : [ "genres" ],
        "summary" : "Get all genres",
        "produces" : [ "appliction/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Genre"
              }
            }
          }
        }
      }
    },
    "/api/v1/authors/{authorId}" : {
      "get" : {
        "tags" : [ "authors" ],
        "summary" : "Get author by ID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authorId",
          "in" : "path",
          "description" : "ID of author in ObjectId",
          "required" : true,
          "type" : "string",
          "format" : "ObjectId"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Author"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          },
          "404" : {
            "description" : "Author was not found"
          }
        }
      }
    },
    "/api/v1/authors/{authorId}/genres" : {
      "get" : {
        "tags" : [ "genres", "authors" ],
        "summary" : "Get books genres of specific author",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authorId",
          "in" : "path",
          "description" : "ID of author in ObjectId",
          "required" : true,
          "type" : "string",
          "format" : "ObjectId"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Genre"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          },
          "404" : {
            "description" : "Author was not found"
          }
        }
      }
    },
    "/api/v1/authors/{authorId}/books" : {
      "get" : {
        "tags" : [ "authors", "books" ],
        "summary" : "Get list of books by author id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authorId",
          "in" : "path",
          "description" : "Id of an author",
          "required" : true,
          "type" : "string",
          "format" : "ObjectId"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Book"
              }
            }
          },
          "400" : {
            "description" : "Invalid author id"
          },
          "404" : {
            "description" : "Author was not found"
          }
        }
      }
    },
    "/api/v1/authors/by_full_name/{last_name}/{first_name}/{middle_name}" : {
      "get" : {
        "tags" : [ "authors" ],
        "summary" : "Get authors by last name, first name, middle",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "last_name",
          "in" : "path",
          "description" : "Last name of author",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "first_name",
          "in" : "path",
          "description" : "First name of author",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "middle_name",
          "in" : "path",
          "description" : "Middle name of author",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit of response data",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "Skip data",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Author"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          },
          "404" : {
            "description" : "Authors was not found"
          }
        }
      }
    },
    "/api/v1/authors/start_with/{start_text_lastname}" : {
      "get" : {
        "tags" : [ "authors" ],
        "summary" : "Get authors list from first letters of last name",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "start_text_lastname",
          "in" : "path",
          "description" : "first letters of last name of author",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Author"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        }
      }
    },
    "/api/v1/authors/by_name/{last_name}" : {
      "get" : {
        "tags" : [ "authors" ],
        "summary" : "Get list of author by last name",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "last_name",
          "in" : "path",
          "description" : "First letters of last name of author",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Author"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        }
      }
    },
    "/api/v1/books/{booksIds}" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Get books by books ids",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "booksIds",
          "in" : "path",
          "description" : "Comma separated IDs of books",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Book"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          },
          "404" : {
            "description" : "Book was not found"
          }
        }
      }
    },
    "/api/v1/books/{booksIds}/fb2info" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Get books FB2 description and cover image",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "booksIds",
          "in" : "path",
          "description" : "Comma separated IDs of books",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FB2Info"
              }
            }
          },
          "400" : {
            "description" : "Incorrect book id"
          },
          "404" : {
            "description" : "Book was not found"
          }
        }
      }
    },
    "/api/v1/books/{booksIds}/package" : {
      "post" : {
        "tags" : [ "books" ],
        "summary" : "Download books by IDs in ZIP format",
        "produces" : [ "application/zip" ],
        "parameters" : [ {
          "name" : "booksIds",
          "in" : "path",
          "description" : "Comma separated IDs of books",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Library-Session-ID",
          "in" : "header",
          "description" : "Session ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Incorrect book id"
          },
          "404" : {
            "description" : "Book was not found"
          }
        }
      }
    },
    "/api/v1/books/by_author/{authorId}" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Get list of book by author id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authorId",
          "in" : "path",
          "description" : "ID of author",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Book"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        }
      }
    },
    "/api/v1/books/by_name/{name}" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Find books by piece of name. Using regexp, case-insensitive search",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Text from part of book name"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Book"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        }
      }
    },
    "/api/v1/books/by_genre/{genre}" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Find books by genres",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "genre",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Name of genre"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Book"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        }
      }
    },
    "/api/v1/books/search/" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Find books by part of book info",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "genre",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Name of genre"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Book"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        }
      }
    },
    "/api/v1/languages" : {
      "get" : {
        "tags" : [ "languages" ],
        "summary" : "List of languages",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/api/v1/languages/{languageId}" : {
      "get" : {
        "tags" : [ "languages" ],
        "summary" : "Book language information",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Language two letter code"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Language"
              }
            }
          }
        }
      }
    },
    "/api/v1/languages/{languageId}/books" : {
      "get" : {
        "tags" : [ "languages", "books" ],
        "summary" : "Get list of books in specified language",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language two letter code",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Book"
              }
            }
          },
          "400" : {
            "description" : "Invalid language id"
          },
          "404" : {
            "description" : "Books in specified language not found"
          }
        }
      }
    }
  },
  "definitions" : {
    "Info" : {
      "description" : "Information about the library",
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "Library version"
        },
        "authorsCount" : {
          "type" : "integer",
          "description" : "Total number of authors"
        },
        "seriesCount" : {
          "type" : "integer",
          "description" : "Total number of books series"
        },
        "booksCount" : {
          "type" : "integer",
          "description" : "Total number of books"
        },
        "authorsLetters" : {
          "type" : "array",
          "description" : "First letters of authors",
          "items" : {
            "type" : "string"
          }
        }
      },
      "required" : [ "version", "authorsCount", "booksCount", "authorsLetters" ]
    },
    "Author" : {
      "description" : "Author of a book",
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Internal author identifier"
        },
        "last_name" : {
          "type" : "string",
          "description" : "Author's last name"
        },
        "first_name" : {
          "type" : "string",
          "description" : "Author's first name"
        },
        "middle_name" : {
          "type" : "string",
          "description" : "Author's middle name"
        }
      }
    },
    "Genre" : {
      "description" : "Genre of a book",
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "FB2 genre code"
        },
        "titles" : {
          "type" : "object",
          "description" : "Genre title",
          "properties" : {
            "en" : {
              "type" : "string"
            },
            "ru" : {
              "type" : "string"
            }
          },
          "required" : [ "en", "ru" ]
        },
        "detailed" : {
          "type" : "object",
          "description" : "Genre description",
          "properties" : {
            "en" : {
              "type" : "string"
            },
            "ru" : {
              "type" : "string"
            }
          },
          "required" : [ "en", "ru" ]
        },
        "subGenres" : {
          "type" : "array",
          "description" : "Sub-genres",
          "items" : {
            "$ref" : "#/definitions/SubGenre"
          }
        },
        "count_books" : {
          "type" : "integer",
          "description" : "Count books with the specified genre"
        }
      },
      "required" : [ "id", "titles", "detailed" ]
    },
    "SubGenre" : {
      "description" : "Sub-genre of a book",
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "FB2 genre code"
        },
        "titles" : {
          "type" : "object",
          "description" : "Sub-genre title",
          "properties" : {
            "en" : {
              "type" : "string"
            },
            "ru" : {
              "type" : "string"
            }
          },
          "required" : [ "en", "ru" ]
        },
        "count_books" : {
          "type" : "integer",
          "description" : "Count books with the specified genre"
        }
      },
      "required" : [ "id", "titles" ]
    },
    "Book" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "keywords" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "filename" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "string"
        },
        "lang" : {
          "type" : "string"
        },
        "series" : {
          "type" : "string"
        },
        "sernum" : {
          "type" : "string"
        },
        "genres" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Genre"
          }
        },
        "authors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Author"
          }
        },
        "added" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "Language" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "nativeName" : {
          "type" : "string"
        },
        "booksCount" : {
          "type" : "integer"
        }
      }
    },
    "FB2Info" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "object",
          "description" : "Book's description from FB2 file from <description> section."
        },
        "cover" : {
          "type" : "string",
          "description" : "Book's cover image in base64 format"
        },
        "cover_mime_type" : {
          "type" : "string",
          "description" : "Mimetype of cover image"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/toadstool/books/1.0.0",
  "schemes" : [ "https", "http" ]
}